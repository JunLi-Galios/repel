- 14:20:45 INFO: Opened log file for new session
- 14:20:45 INFO: model size: 739
- 14:20:45 DEBUG: observation predicates: 
- 14:20:45 DEBUG: 	D-DoorOpen
- 14:20:45 DEBUG: 	D-Driving
- 14:20:45 DEBUG: 	D-ElevatorEnter
- 14:20:45 DEBUG: 	D-ElevatorExit
- 14:20:45 DEBUG: 	D-GateEnter
- 14:20:45 DEBUG: 	D-GateExit
- 14:20:45 DEBUG: 	D-InCar
- 14:20:45 DEBUG: 	D-Similar
- 14:20:45 DEBUG: 	D-Track
- 14:20:45 DEBUG: 	D-TrunkOpen
- 14:20:45 DEBUG: 	D-Walking
- 14:20:45 INFO: running unit propagation...
- 14:20:45 INFO: performing unit propagation...
- 14:20:45 DEBUG: found 50 unit clauses.
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p1, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p1, p1t1) v !D-Driving(p1t1) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p1, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p1, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p1, p1t1) v !D-GateEnter(p1t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p1, p1t1) v !D-GateExit(p1t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p1, p1t1) v !D-InCar(p1t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p1, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p1, p1t1) v !D-Walking(p1t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-Driving(p2t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-GateEnter(p2t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-GateExit(p2t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-InCar(p2t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-Walking(p2t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t1) v HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagating HasTrack(p1, p1t1) into HasTrack(p1, p1t1)

- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t1) v HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t1) v !HasTrack(p1, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t1) v !HasTrack(p1, p2t1) v !D-Track(p1t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t1) v !HasTrack(p1, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t1) v !D-Track(p2t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t1) v !D-Track(p1t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t1) v !HasTrack(p2, p1t1) v !D-Track(p2t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t1) v !HasTrack(p2, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t1) v !HasTrack(p2, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p1t1, p1t2) v !HasTrack(p1, p1t1) v HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p1t2, p1t1) v !HasTrack(p1, p1t2) v HasTrack(p1, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p2, p2t2) v HasTrack(p2, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-Driving(p2t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-GateEnter(p2t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-GateExit(p2t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-InCar(p2t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p2, p2t1) v !D-Walking(p2t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t1) v HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagating HasTrack(p2, p2t1) into HasTrack(p2, p2t1)

- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t1) v !D-Track(p1t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t1) v !HasTrack(p2, p1t1) v !D-Track(p2t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t1) v !HasTrack(p2, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t1) v !HasTrack(p2, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p2, p2t2) v HasTrack(p2, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p1t2) @ {[28:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (1, 60)], [(28, 30), (31, 60)], [31:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (1, 60)], [(28, 30), (31, 60)], [31:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p1t2) @ {[1:27], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-DoorOpen(p2t1) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (1, 60)], [(21, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t1) v !D-Track(p2t1) ] @ {[1:20], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-DoorOpen(p2t1) @ {[1:20], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p1t2) @ {[35:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (1, 60)], [(35, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (1, 60)], [(35, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p1t2) @ {[1:34], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Driving(p2t1) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (1, 60)], [(2, 15), (16, 60)], [16:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t1) v !D-Track(p2t1) ] @ {[1:1], [16:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Driving(p2t1) @ {[1:1], [16:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorEnter(p1t1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t1) v !D-Track(p1t1) ] @ {[6:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)], [6:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorEnter(p1t1) @ {[6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-ElevatorExit(p2t2) @ {[55:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-ElevatorExit(p2t2) @ {[1:54]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateEnter(p2t1) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (1, 60)], [(2, 10), (11, 60)], [11:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t1) v !D-Track(p2t1) ] @ {[1:1], [11:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateEnter(p2t1) @ {[1:1], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-GateExit(p1t2) @ {[47:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (1, 60)], [(47, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (1, 60)], [(47, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-GateExit(p1t2) @ {[1:46], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p1t2) @ {[29:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (1, 60)], [(29, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (1, 60)], [(29, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p1t2) @ {[1:28], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-InCar(p2t1) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (1, 60)], [(2, 20), (21, 60)], [21:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t1) v !D-Track(p2t1) ] @ {[1:1], [21:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-InCar(p2t1) @ {[1:1], [21:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) v !D-Similar(p1t1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p1t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t1, p2t2) v !HasTrack(p1, p2t1) v HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Similar(p2t2, p2t1) v !HasTrack(p1, p2t2) v HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Similar(p2t2, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !D-Track(p1t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !D-Track(p1t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t1) @ {[1:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) v !D-Track(p1t1) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) v !D-Track(p1t1) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) v !D-Track(p1t1) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) v !D-Track(p1t1) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) v !D-Track(p1t1) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) v !D-Track(p1t1) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) v !D-Track(p1t1) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) v !D-Track(p1t1) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p1t1) v !HasTrack(p1, p1t2) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !D-Track(p1t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p1, p2t1) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p1t1) v !HasTrack(p1, p2t2) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !D-Track(p1t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t1) v !HasTrack(p2, p1t1) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !D-Track(p2t1) v !HasTrack(p2, p1t1) ] @ {[26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t1) @ {[26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p1t2) v !HasTrack(p1, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !D-Track(p1t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !D-Track(p1t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !D-Track(p2t1) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !D-Track(p2t1) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p1t2) @ {[28:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !D-Track(p1t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !D-Track(p1t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p1t2) v !HasTrack(p2, p1t2) ] @ {[1:27], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !D-Track(p2t1) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !D-Track(p2t1) v !HasTrack(p2, p1t2) ] @ {[1:27], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !D-Track(p2t1) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (1, 60)], [(28, 50), (51, 60)], [51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p1t2) @ {[1:27], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-Track(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) ] @ {[2:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) ] @ {[2:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) ] @ {[2:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !D-Track(p2t1) ] @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !D-Track(p2t1) ] @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) ] @ {[2:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !D-Track(p2t1) ] @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !D-Track(p2t2) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !D-Track(p2t2) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t1) @ {[2:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (1, 60)], [(2, 45), (46, 60)], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) v !D-Track(p2t1) ] @ {[1:1], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (1, 60)], [(2, 45), (46, 60)], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) v !D-Track(p2t1) ] @ {[1:1], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (1, 60)], [(2, 45), (46, 60)], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) v !D-Track(p2t1) ] @ {[1:1], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (1, 60)], [(2, 45), (46, 60)], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) v !D-Track(p2t1) ] @ {[1:1], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (1, 60)], [(2, 45), (46, 60)], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) v !D-Track(p2t1) ] @ {[1:1], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !D-Track(p2t1) ] @ {[1:1]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[46:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !D-Track(p2t1) ] @ {[1:1]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[46:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (1, 60)], [(2, 45), (46, 60)], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (1, 60)], [(2, 45), (46, 60)], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !D-Track(p2t1) ] @ {[1:1]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !D-Track(p2t1) ] @ {[46:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !D-Track(p2t1) ] @ {[1:1]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !D-Track(p2t1) ] @ {[46:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !D-Track(p2t1) v !HasTrack(p2, p2t2) ] @ {[1:1], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !D-Track(p2t2) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[1:1], [46:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !D-Track(p2t2) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t1) @ {[1:1], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-Track(p2t2) v !HasTrack(p1, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-Track(p2t2) v !HasTrack(p2, p2t2) ] @ {[55:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !D-Track(p2t2) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !D-Track(p2t2) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Track(p2t2) @ {[50:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[28:49]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !D-Track(p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[28:49]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[28:49]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !D-Track(p2t2) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[28:49]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !D-Track(p2t2) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Track(p2t2) @ {[1:49]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p1t1) @ {[20:22]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t1) ] @ {[1:19], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:19], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p1t1) @ {[1:19], [23:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t1) @ {[31:45]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t1) ] @ {[2:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t1) @ {[1:30], [46:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-TrunkOpen(p2t2) @ {[50:50]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[51:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-TrunkOpen(p2t2) @ {[1:49], [51:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v Walking(p2) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p1t1) @ {[2:18], [23:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t1) ] @ {[1:1], [19:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:1], [19:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v Walking(p2) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p1t1) @ {[1:1], [19:22], [26:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v Walking(p2) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Walking(p1) ] @ {[26:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ] @ {[26:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t1) @ {[26:30]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v Walking(p2) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:25], [31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Walking(p1) ] @ {[26:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t1) ] @ {[2:25], [31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t1) @ {[1:25], [31:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v Walking(p2) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Walking(p1) ] @ {[26:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v Walking(p1) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v Walking(p2) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=D-Walking(p2t2) @ {[52:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v Walking(p2) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Walking(p1) ] @ {[26:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:51]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v Walking(p1) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:51]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v Walking(p2) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!D-Walking(p2t2) @ {[1:51]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v Walking(p2) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) v !HasTrack(p1, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Walking(p1) ] @ {[26:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v Walking(p1) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v Walking(p2) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p1t2) v HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagating HasTrack(p1, p1t2) into HasTrack(p1, p1t2)

- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) ] @ {[28:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) ] @ {[28:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=HasTrack(p1, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v Walking(p2) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Walking(p1) ] @ {[26:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v Walking(p1) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v Walking(p2) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagating ElevatorEnter(p1) into !ElevatorEnter(p1)

- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[(1, 5), (6, 60)], [6:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[(1, 2), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagating ElevatorEnter(p1) into !ElevatorEnter(p1)

- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[(1, 5), (6, 60)], [6:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[(1, 1), (6, 60)], [7:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v Walking(p2) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[6:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Walking(p1) ] @ {[26:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v Walking(p1) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v Walking(p2) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[(1, 5), (6, 60)], [6:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[(1, 5), (6, 60)], [6:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[(1, 2), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v <>{m} ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[(1, 1), (6, 60)], [7:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=DoorOpen(p2) @ {[21:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v Walking(p2) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[6:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Walking(p1) ] @ {[26:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v Walking(p1) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v Walking(p2) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[(1, 5), (6, 60)], [6:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[(1, 20), (1, 60)], [(21, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p2, p2t1) ^ D-Driving(p2t1) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[(1, 5), (6, 60)], [6:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[(1, 2), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v <>{m} ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[(1, 1), (6, 60)], [7:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=Driving(p2) @ {[2:15]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:1], [16:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v Walking(p2) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[6:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Walking(p1) ] @ {[26:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v Walking(p1) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v Walking(p2) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[(1, 5), (6, 60)], [6:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[(1, 20), (1, 60)], [(21, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[(1, 1), (1, 60)], [(2, 15), (16, 60)], [16:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p2, p2t1) ^ D-Driving(p2t1) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[(1, 1), (1, 60)], [(2, 15), (16, 60)], [16:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[(1, 1), (1, 60)], [(2, 15), (16, 60)], [16:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[(1, 1), (1, 60)], [(2, 15), (16, 60)], [16:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[(1, 5), (6, 60)], [6:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[(1, 2), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[(1, 3), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagating GateEnter(p2) into !GateEnter(p2)

- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[(1, 1), (1, 60)], [(2, 10), (11, 60)], [11:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v <>{m} ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[(1, 1), (6, 60)], [7:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagating GateEnter(p2) into !GateEnter(p2)

- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[(1, 1), (1, 60)], [(2, 10), (11, 60)], [11:60]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[(1, 1), (1, 60)], [(2, 2), (11, 60)], [12:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:1], [16:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:1], [11:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v Walking(p2) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[6:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Walking(p1) ] @ {[26:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v Walking(p1) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v Walking(p2) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[(1, 5), (6, 60)], [6:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[(1, 20), (1, 60)], [(21, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[(1, 1), (1, 60)], [(2, 15), (16, 60)], [16:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p2, p2t1) ^ D-Driving(p2t1) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[(1, 1), (1, 60)], [(2, 10), (11, 60)], [11:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p2, p2t1) ^ D-InCar(p2t1) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[(1, 1), (1, 60)], [(2, 15), (16, 60)], [16:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[(1, 1), (1, 60)], [(2, 15), (16, 60)], [16:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[(1, 1), (1, 60)], [(2, 15), (16, 60)], [16:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[(1, 5), (6, 60)], [6:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[(1, 2), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[(1, 3), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[(1, 1), (1, 60)], [(2, 10), (11, 60)], [11:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v <>{m} ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[(1, 1), (6, 60)], [7:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v <>{m} GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[(1, 1), (1, 60)], [(2, 2), (11, 60)], [12:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=InCar(p2) @ {[2:20]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-DoorOpen(p1t1) v DoorOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Driving(p1t1) v Driving(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:1], [16:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorEnter(p1t1) v ElevatorEnter(p2) ] @ {[(1, 5), (6, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v ElevatorEnter(p2) ] @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-ElevatorExit(p1t1) v ElevatorExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateEnter(p1t1) v GateEnter(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:1], [11:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-GateExit(p1t1) v GateExit(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p1t1) ] @ {[1:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-InCar(p1t1) v InCar(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p1t1) v !HasTrack(p2, p1t1) ] @ {[1:1], [21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-TrunkOpen(p1t1) v TrunkOpen(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v TrunkOpen(p2) ] @ {[20:22]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t1) v !HasTrack(p2, p1t1) v !D-Walking(p1t1) v Walking(p2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v Walking(p2) ] @ {[2:18], [23:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-DoorOpen(p1t2) v DoorOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 30), (31, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v DoorOpen(p2) ] @ {[28:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Driving(p1t2) v Driving(p1) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Driving(p1t2) v Driving(p2) ] @ {[(1, 34), (35, 60)], [(35, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v Driving(p2) ] @ {[35:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorEnter(p1t2) v ElevatorEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-ElevatorExit(p1t2) v ElevatorExit(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateEnter(p1t2) v GateEnter(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateEnter(p1t2) v GateEnter(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-GateExit(p1t2) v GateExit(p1) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-GateExit(p1t2) v GateExit(p2) ] @ {[(1, 46), (47, 60)], [(47, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v GateExit(p2) ] @ {[47:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-InCar(p1t2) v InCar(p1) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-InCar(p1t2) v InCar(p2) ] @ {[(1, 28), (29, 60)], [(29, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v InCar(p2) ] @ {[29:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p1) v !D-TrunkOpen(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-TrunkOpen(p1t2) v TrunkOpen(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ TrunkOpen(p2) v !D-TrunkOpen(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p1, p1t2) v !D-Walking(p1t2) v Walking(p1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) v !D-Walking(p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p1t2) v !HasTrack(p2, p1t2) v !D-Walking(p1t2) v Walking(p2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) v !D-Walking(p1t2) v !HasTrack(p2, p1t2) ] @ {[28:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-DoorOpen(p2t1) v DoorOpen(p1) ] @ {[(1, 20), (21, 60)], [(21, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v DoorOpen(p1) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Driving(p2t1) v Driving(p1) ] @ {[(1, 1), (2, 60)], [(2, 15), (16, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Driving(p1) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorEnter(p2t1) v ElevatorEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t1) v !HasTrack(p1, p2t1) ] @ {[6:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-ElevatorExit(p2t1) v ElevatorExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p1) v !D-ElevatorExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorExit(p2) v !D-ElevatorExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateEnter(p2t1) v GateEnter(p1) ] @ {[(1, 1), (2, 60)], [(2, 10), (11, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v GateEnter(p1) ] @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-GateExit(p2t1) v GateExit(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t1) v !HasTrack(p1, p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t1) ] @ {[2:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-InCar(p2t1) v InCar(p1) ] @ {[(1, 1), (2, 60)], [(2, 20), (21, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v InCar(p1) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-TrunkOpen(p2t1) v TrunkOpen(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v TrunkOpen(p1) ] @ {[31:45]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t1) v !HasTrack(p1, p2t1) v !D-Walking(p2t1) v Walking(p1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v Walking(p1) ] @ {[26:30]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p1) v !D-DoorOpen(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-DoorOpen(p2t2) v DoorOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ DoorOpen(p2) v !D-DoorOpen(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Driving(p2t2) v Driving(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !D-Driving(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Driving(p2t2) v Driving(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !D-Driving(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p1) v !D-ElevatorEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorEnter(p2t2) v ElevatorEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ ElevatorEnter(p2) v !D-ElevatorEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p1) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v ElevatorExit(p1) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-ElevatorExit(p2t2) v ElevatorExit(p2) ] @ {[(1, 54), (55, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v ElevatorExit(p2) ] @ {[55:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateEnter(p2t2) v GateEnter(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p1) v !D-GateEnter(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateEnter(p2t2) v GateEnter(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ GateEnter(p2) v !D-GateEnter(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-GateExit(p2t2) v GateExit(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p1) v !D-GateExit(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-GateExit(p2t2) v GateExit(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ GateExit(p2) v !D-GateExit(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-InCar(p2t2) v InCar(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p1) v !D-InCar(p2t2) v !HasTrack(p1, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-InCar(p2t2) v InCar(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ InCar(p2) v !D-InCar(p2t2) v !HasTrack(p2, p2t2) ] @ {[50:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v TrunkOpen(p1) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-TrunkOpen(p2t2) v TrunkOpen(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v TrunkOpen(p2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p1, p2t2) v !D-Walking(p2t2) v Walking(p1) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v Walking(p1) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !D-Track(p2t2) v !HasTrack(p2, p2t2) v !D-Walking(p2t2) v Walking(p2) ] @ {[(1, 49), (50, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v Walking(p2) ] @ {[52:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p1) v HasTrack(p1, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p1, p2t1) ^ D-DoorOpen(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v HasTrack(p1, p1t2) ^ D-Driving(p1t2) v HasTrack(p1, p2t1) ^ D-Driving(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p1) v HasTrack(p1, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[(1, 5), (6, 60)], [6:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p1) v HasTrack(p1, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p1) v HasTrack(p1, p2t1) ^ D-GateEnter(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p1) v HasTrack(p1, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v HasTrack(p1, p1t2) ^ D-InCar(p1t2) v HasTrack(p1, p2t1) ^ D-InCar(p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) v HasTrack(p1, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p1, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p1, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p1) v HasTrack(p1, p1t1) ^ D-Walking(p1t1) v HasTrack(p1, p2t1) ^ D-Walking(p2t1) v HasTrack(p1, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !DoorOpen(p2) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) v HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) ] @ {[(1, 20), (1, 60)], [(21, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p2, p2t1) ^ D-DoorOpen(p2t1) v HasTrack(p2, p1t2) ^ D-DoorOpen(p1t2) ] @ {[21:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) v HasTrack(p2, p2t1) ^ D-Driving(p2t1) ] @ {[(1, 1), (1, 60)], [(2, 15), (16, 60)], [16:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p2, p2t1) ^ D-Driving(p2t1) v HasTrack(p2, p1t2) ^ D-Driving(p1t2) ] @ {[2:15]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorEnter(p2) v HasTrack(p2, p1t1) ^ D-ElevatorEnter(p1t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !ElevatorExit(p2) v HasTrack(p2, p2t2) ^ D-ElevatorExit(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !GateEnter(p2) v HasTrack(p2, p2t1) ^ D-GateEnter(p2t1) ] @ {[(1, 1), (1, 60)], [(2, 10), (11, 60)], [11:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !GateExit(p2) v HasTrack(p2, p1t2) ^ D-GateExit(p1t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) v HasTrack(p2, p2t1) ^ D-InCar(p2t1) ] @ {[(1, 1), (1, 60)], [(2, 20), (21, 60)], [21:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p2, p2t1) ^ D-InCar(p2t1) v HasTrack(p2, p1t2) ^ D-InCar(p1t2) ] @ {[2:20]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) v HasTrack(p2, p1t1) ^ D-TrunkOpen(p1t1) v HasTrack(p2, p2t1) ^ D-TrunkOpen(p2t1) v HasTrack(p2, p2t2) ^ D-TrunkOpen(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !Walking(p2) v HasTrack(p2, p1t1) ^ D-Walking(p1t1) v HasTrack(p2, p2t1) ^ D-Walking(p2t1) v HasTrack(p2, p2t2) ^ D-Walking(p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[1:60]}
- 14:20:45 DEBUG: propagating !HasTrack(p1, p2t1) into HasTrack(p1, p2t1)

- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t1) v HasTrack(p1, p2t1) @ {[(1, 1), (1, 60)], [(2, 25), (26, 60)], [26:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p1, p2t2) v HasTrack(p1, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t1) v HasTrack(p2, p1t1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p1t2) v HasTrack(p2, p1t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, mi, o, oi, s, si, d, di, f, fi, =, >, <} HasTrack(p2, p2t2) v HasTrack(p2, p2t2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t1) v !D-Track(p1t2) v !D-Track(p2t1) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p1t2) v !HasTrack(p1, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p1t2) v !D-Track(p2t1) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) v !D-Track(p2t1) v !D-Track(p2t2) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) v !D-Track(p2t2) v !D-Track(p2t1) ] @ {[(1, 1), (2, 60)], [(2, 45), (46, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p1t2) v !D-Track(p1t1) v !D-Track(p1t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t1) v !HasTrack(p2, p2t2) v !D-Track(p1t1) v !D-Track(p2t2) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p1t1) v !D-Track(p1t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) v !D-Track(p1t2) v !D-Track(p2t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t1) v !D-Track(p2t2) v !D-Track(p1t1) ] @ {[(1, 25), (26, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p2t2) v !HasTrack(p2, p1t2) v !D-Track(p2t2) v !D-Track(p1t2) ] @ {[(1, 27), (28, 60)], [(28, 50), (51, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p2, p1t2) v !HasTrack(p2, p2t2) ] @ {[50:50]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t2) v !HasTrack(p1, p2t1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ HasTrack(p1, p2t1) v !HasTrack(p1, p2t2) ] @ {[1:60]}
- 14:20:45 DEBUG: working on inf: [ !HasTrack(p1, p2t2) ] @ {[2:25]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p1) ^ !InCar(p1) v !Walking(p1) ^ InCar(p1) v !Walking(p1) ^ !InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ Walking(p2) ^ !InCar(p2) v !Walking(p2) ^ InCar(p2) v !Walking(p2) ^ !InCar(p2) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p1) v InCar(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !Driving(p2) v InCar(p2) ] @ {[(1, 1), (1, 60)], [(2, 15), (16, 60)], [(16, 20), (21, 60)], [21:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p1) v !ElevatorEnter(p1) ^ !ElevatorExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !InCar(p2) v !ElevatorEnter(p2) ^ !ElevatorExit(p2) ] @ {[(1, 1), (1, 60)], [(2, 20), (21, 60)], [21:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p1) v !GateEnter(p1) ^ !GateExit(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ Driving(p2) v !GateEnter(p2) ^ !GateExit(p2) ] @ {[(1, 1), (1, 60)], [(2, 15), (16, 60)], [16:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p1) ^ !DoorOpen(p1) v !Driving(p1) ] @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: [ !TrunkOpen(p2) ^ !DoorOpen(p2) v !Driving(p2) ] @ {[(1, 1), (1, 60)], [(2, 15), (16, 60)], [16:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p1) v <>{>} GateExit(p1) @ {[(1, 5), (6, 60)], [6:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p1) v <>{<} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p1) v <>{>} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !GateExit(p1) v <>{<} ElevatorEnter(p1) @ {[(1, 2), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorEnter(p2) v <>{>} GateExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !ElevatorExit(p2) v <>{<} GateEnter(p2) @ {[(1, 3), (1, 60)]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !GateEnter(p2) v <>{>} ElevatorExit(p2) @ {[(1, 1), (1, 60)], [(2, 10), (11, 60)], [11:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !GateExit(p2) v <>{<} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v <>{m} ElevatorEnter(p1) @ {[1:5]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorExit(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorEnter(p1) v <>{m} ElevatorEnter(p1) @ {[(1, 1), (6, 60)], [7:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v GateEnter(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !ElevatorExit(p1) v <>{m} ElevatorExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateExit(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateEnter(p1) v <>{m} GateEnter(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p1) v Driving(p1) v ElevatorEnter(p1) v ElevatorExit(p1) v GateEnter(p1) v InCar(p1) v TrunkOpen(p1) v Walking(p1)) v !GateExit(p1) v <>{m} GateExit(p1) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorExit(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorEnter(p2) v <>{m} ElevatorEnter(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v GateEnter(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !ElevatorExit(p2) v <>{m} ElevatorExit(p2) @ {[1:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v <>{m} GateEnter(p2) @ {[2:10]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateExit(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateEnter(p2) v <>{m} GateEnter(p2) @ {[(1, 1), (1, 60)], [(2, 2), (11, 60)], [12:60]}
- 14:20:45 DEBUG: propagate_literal called with lit=!HasTrack(p1, p2t1) @ {[2:25]}
- 14:20:45 DEBUG: working on inf: !<>{m, o, fi, <} (DoorOpen(p2) v Driving(p2) v ElevatorEnter(p2) v ElevatorExit(p2) v GateEnter(p2) v InCar(p2) v TrunkOpen(p2) v Walking(p2)) v !GateExit(p2) v <>{m} GateExit(p2) @ {[1:60]}
