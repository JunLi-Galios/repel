# Duplo formulas file
#
# format is: "weight: formula". 
# Symbols:
#   type: Name = {value,value,...,value}
#   Atom: pred(constant/?variable:num, ..., constant/?variable:num)
#     currently variables are not working (neither are types)
#   Negation: ! or ~
#   Disjunction: v or |
#   Implication: -> or =>
#   LiquidOp: [ <subformula ]
#   Conjunction: ^{<relations>} or &{relations}
#     with no relation given, defaults to = relation
#     ";" is an alias for ^{m}
#     multiple relations are separated by commas, ie P(x) ^{m,mi} Q(x)
#   Diamond: <>{<relations>} <atom>
#     note that diamondop has pretty high precedence so you may need ()s
#     relations are specified as before
#        

type: Hand = {Left,Right,Both}
type: Duplo = {Red,Blue,Green,Yellow,Orange,White,LightBlue}

inf: D-Hit(?Hand:1,?Duplo:1,?Duplo:2) -> Hit(?Hand:1,?Duplo:1,?Duplo:2)
inf: D-Mouth(?Hand:1,?Duplo:1) -> Mouth(?Hand:1,?Duplo:1)
inf: D-Hold(?Hand:1,?Duplo:1) -> Hold(?Hand:1,?Duplo:1)
inf: D-Press(?Hand:1,?Duplo:1,?Duplo:2) -> Press(?Hand:1,?Duplo:1,?Duplo:2)
inf: D-Shake(?Hand:1,?Duplo:1) -> Shake(?Hand:1,?Duplo:1)
inf: D-Move(?Hand:1,?Duplo:1) -> Move(?Hand:1,?Duplo:1)

inf: Press(?Hand:*,?Duplo:1,?Duplo:2) -> <>{umi}Interlock(?Duplo:1,?Duplo:2)
inf: Interlock(?Duplo:1,?Duplo:2) -> Flush(?Duplo:1,?Duplo:2) V Dangle(?Duplo:1,?Duplo:2)
